#!/bin/bash

HOOK_NAMES="applypatch-msg pre-applypatch post-applypatch pre-commit
            prepare-commit-msg commit-msg post-commit pre-rebase post-checkout 
            post-merge pre-receive update post-receive post-update pre-auto-gc"
# assuming the script is in a bin directory, one level into the repo
HOOK_DIR=../.git/hooks

if [ "$(pwd | sed 's/.*\///')" != "bin" ]; then
  echo "This script must be run from the bin directory."
  exit 1
fi

for hook in $HOOK_NAMES; do
  # If the hook already exists, is executable, and is not a symlink
  if [[ ! -h $HOOK_DIR/$hook && -x $HOOK_DIR/$hook ]]; then
      mv $HOOK_DIR/$hook $HOOK_DIR/$hook.local
  fi
  # create the symlink, overwriting the file if it exists
  # probably the only way this would happen is if you're using 
  # an old version of git -- back when the sample hooks were not executable, 
  # instead of being named ____.sample
  if [[ -e "$hook" && ! -e $HOOK_DIR/$hook ]]; then
    ln -sf ../../bin/$hook $HOOK_DIR/$hook
  fi
done
